<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>com.squareup</groupId>
  <artifactId>javapoet</artifactId>
  <version>1.6.0-SNAPSHOT</version>

  <name>JavaPoet</name>
  <description>Use beautiful Java code to generate beautiful Java code.</description>
  <url>http://github.com/square/javapoet/</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <java.version>1.7</java.version>
    <junit.version>4.12</junit.version>
       <pitest.version>1.4.3</pitest.version>
       <pitest-junit5.version>0.8</pitest-junit5.version>
	   <jacoco.version>0.8.2</jacoco.version>
	   <maven-compiler-plugin.java.source.version>1.8</maven-compiler-plugin.java.source.version>
        <maven-compiler-plugin.java.target.version>1.8</maven-compiler-plugin.java.target.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <truth.version>0.25</truth.version>
    <compile-testing.version>0.6</compile-testing.version>
  </properties>

  <scm>
    <url>http://github.com/square/javapoet/</url>
    <connection>scm:git:git://github.com/square/javapoet.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/square/javapoet.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>http://github.com/square/javapoet/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>Square, Inc.</name>
    <url>http://squareup.com</url>
  </organization>

  <dependencies>

    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <version>0.30</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.testing.compile</groupId>
      <artifactId>compile-testing</artifactId>
      <version>0.6</version>
      <scope>test</scope>
    </dependency>
    
       <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${junit.version}</version>
          <scope>test</scope>
      </dependency>
        
   <!-- pitest -->
      <dependency>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-junit5-plugin</artifactId>
          <version>${pitest-junit5.version}</version>
      </dependency>
      
      <!-- https://github.com/hcoles/pitest/issues/284 -->
      <!-- Need this to support JUnit 5 -->
      <dependency>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${pitest.version}</version>
      </dependency>
      
      <!-- jacoco -->
      <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
      </dependency>
    <dependency>
      <groupId>com.google.jimfs</groupId>
      <artifactId>jimfs</artifactId>
      <version>1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.10.16</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jdt.core.compiler</groupId>
      <artifactId>ecj</artifactId>
      <version>4.4.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <systemPropertyVariables>
                           <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
                        </systemPropertyVariables>
                        <!-- ↓これがないとスタックトレースが出ない -->
                        <trimStackTrace>>false</trimStackTrace>
                    </configuration>
               </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven-compiler-plugin.java.source.version}</source>
                    <target>${maven-compiler-plugin.java.target.version}</target>
						<argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
						<includes>
						<include>**/*.groovy</include>
						<include>**/*.java</include>
					</includes>
					<testIncludes>
						<testInclude>**/*.groovy</testInclude>
						<testInclude>**/*.java</testInclude>
					</testIncludes>
					</configuration>
				</plugin>
				<plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>${jacoco.version}</version>
                
              <executions>
                  <execution>
                      <id>default-prepare-agent</id>
                      <goals>
                          <goal>prepare-agent</goal>
                      </goals>
                  </execution>
                  <!-- attached to Maven test phase -->
			      <execution>
				      <id>default-report</id>
				      <goals>
				          <goal>report</goal>
				      </goals>
			      </execution>
			      <execution>
				      <id>default-check</id>
				      <goals>
				          <goal>check</goal>
				      </goals>
			      </execution>   
              </executions>
          </plugin>
           
          <plugin>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-maven</artifactId>
              <version>1.4.3</version>
               
              <executions>
                  <execution>
                      <id>pit-report</id>
                      <!-- optional, this example attached the goal into mvn test phase -->
                      <phase>test</phase>
                      <goals>
                          <goal>mutationCoverage</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <failsOnError>true</failsOnError>
          <configLocation>checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
