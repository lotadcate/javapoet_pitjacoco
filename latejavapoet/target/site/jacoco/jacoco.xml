<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JavaPoet"><sessioninfo id="MSI-13c050f1" start="1673307361379" dump="1673307376374"/><package name="com/squareup/javapoet"><class name="com/squareup/javapoet/ClassName" sourcefilename="ClassName.java"><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/squareup/javapoet/ClassName;Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/squareup/javapoet/ClassName;Ljava/lang/String;Ljava/util/List;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="(Ljava/util/List;)Lcom/squareup/javapoet/ClassName;" line="69"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutAnnotations" desc="()Lcom/squareup/javapoet/ClassName;" line="74"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotated" desc="()Z" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageName" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enclosingClassName" desc="()Lcom/squareup/javapoet/ClassName;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topLevelClassName" desc="()Lcom/squareup/javapoet/ClassName;" line="106"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reflectionName" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simpleNames" desc="()Ljava/util/List;" line="117"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peerClass" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;" line="138"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestedClass" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;" line="146"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simpleName" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canonicalName" desc="()Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/ClassName;" line="163"><counter type="INSTRUCTION" missed="2" covered="103"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bestGuess" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;" line="196"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;" line="219"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/element/TypeElement;)Lcom/squareup/javapoet/ClassName;" line="228"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lcom/squareup/javapoet/ClassName;)I" line="251"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="255"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enclosingClasses" desc="()Ljava/util/List;" line="294"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="575"/><counter type="BRANCH" missed="1" covered="67"/><counter type="LINE" missed="0" covered="100"/><counter type="COMPLEXITY" missed="1" covered="55"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/NameAllocator" sourcefilename="NameAllocator.java"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/LinkedHashSet;Ljava/util/LinkedHashMap;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newName" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJavaIdentifier" desc="(Ljava/lang/String;)Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/squareup/javapoet/NameAllocator;" line="163"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="178"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/FieldSpec$Builder" sourcefilename="FieldSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="125"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="130"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAnnotations" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="135"><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="143"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="148"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="153"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addModifiers" desc="([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializer" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="162"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializer" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="166"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/FieldSpec;" line="172"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="96"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/LineWrapper" sourcefilename="LineWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/lang/String;I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastChar" desc="()C" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="83"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrappingSpace" desc="(I)V" line="89"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zeroWidthSpace" desc="(I)V" line="99"><counter type="INSTRUCTION" missed="9" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="(Lcom/squareup/javapoet/LineWrapper$FlushType;)V" line="115"><counter type="INSTRUCTION" missed="11" covered="69"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="239"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/CodeWriter" sourcefilename="CodeWriter.java"><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importedTypes" desc="()Ljava/util/Map;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="()Lcom/squareup/javapoet/CodeWriter;" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="(I)Lcom/squareup/javapoet/CodeWriter;" line="106"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unindent" desc="()Lcom/squareup/javapoet/CodeWriter;" line="111"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unindent" desc="(I)Lcom/squareup/javapoet/CodeWriter;" line="115"><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushPackage" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;" line="121"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popPackage" desc="()Lcom/squareup/javapoet/CodeWriter;" line="127"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushType" desc="(Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/CodeWriter;" line="133"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popType" desc="()Lcom/squareup/javapoet/CodeWriter;" line="138"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitComment" desc="(Lcom/squareup/javapoet/CodeBlock;)V" line="143"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitJavadoc" desc="(Lcom/squareup/javapoet/CodeBlock;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAnnotations" desc="(Ljava/util/List;Z)V" line="167"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitModifiers" desc="(Ljava/util/Set;Ljava/util/Set;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitModifiers" desc="(Ljava/util/Set;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitTypeVariables" desc="(Ljava/util/List;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popTypeVariables" desc="(Ljava/util/List;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;" line="221"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeWriter;" line="225"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeWriter;" line="229"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeBlock;Z)Lcom/squareup/javapoet/CodeWriter;" line="233"><counter type="INSTRUCTION" missed="1" covered="209"/><counter type="BRANCH" missed="1" covered="41"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="1" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitWrappingSpace" desc="()Lcom/squareup/javapoet/CodeWriter;" line="328"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMemberName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="333"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitStaticImportMember" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="343"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLiteral" desc="(Ljava/lang/Object;)V" line="357"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookupName" desc="(Lcom/squareup/javapoet/ClassName;)Ljava/lang/String;" line="378"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importableType" desc="(Lcom/squareup/javapoet/ClassName;)V" line="417"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;" line="438"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stackClassName" desc="(ILjava/lang/String;)Lcom/squareup/javapoet/ClassName;" line="460"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAndIndent" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/CodeWriter;" line="473"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitIndentation" desc="()V" line="511"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suggestedImports" desc="()Ljava/util/Map;" line="521"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$0" desc="(Lcom/squareup/javapoet/TypeVariableName;)V" line="198"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$1" desc="(Lcom/squareup/javapoet/TypeVariableName;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="1143"/><counter type="BRANCH" missed="5" covered="145"/><counter type="LINE" missed="0" covered="243"/><counter type="COMPLEXITY" missed="5" covered="112"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/ClassName$1" sourcefilename="ClassName.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljavax/lang/model/element/TypeElement;)V" line="231"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPackage" desc="(Ljavax/lang/model/element/PackageElement;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;" line="233"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitType" desc="(Ljavax/lang/model/element/TypeElement;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;" line="237"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitUnknown" desc="(Ljavax/lang/model/element/Element;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;" line="241"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultAction" desc="(Ljavax/lang/model/element/Element;Ljava/lang/Void;)Lcom/squareup/javapoet/ClassName;" line="245"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="33"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/MethodSpec$Builder" sourcefilename="MethodSpec.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="297"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="314"><counter type="INSTRUCTION" missed="1" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="323"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="328"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAnnotations" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="333"><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="341"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="346"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="351"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addModifiers" desc="([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="355"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addModifiers" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="361"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypeVariables" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="369"><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypeVariable" desc="(Lcom/squareup/javapoet/TypeVariableName;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="377"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returns" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="382"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returns" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="388"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameters" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="392"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Lcom/squareup/javapoet/ParameterSpec;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="400"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="405"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="409"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varargs" desc="()Lcom/squareup/javapoet/MethodSpec$Builder;" line="413"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varargs" desc="(Z)Lcom/squareup/javapoet/MethodSpec$Builder;" line="417"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addExceptions" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="422"><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addException" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="430"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addException" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="435"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCode" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="439"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNamedCode" desc="(Ljava/lang/String;Ljava/util/Map;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="444"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCode" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="449"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addComment" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="454"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultValue" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="459"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultValue" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="463"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginControlFlow" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="473"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginControlFlow" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="482"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextControlFlow" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="490"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextControlFlow" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="499"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endControlFlow" desc="()Lcom/squareup/javapoet/MethodSpec$Builder;" line="503"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endControlFlow" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="512"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endControlFlow" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="521"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="525"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="530"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/MethodSpec;" line="535"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="107" covered="369"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="18" covered="78"/><counter type="COMPLEXITY" missed="12" covered="41"/><counter type="METHOD" missed="3" covered="36"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/WildcardTypeName" sourcefilename="WildcardTypeName.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V" line="41"><counter type="INSTRUCTION" missed="3" covered="83"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="(Ljava/util/List;)Lcom/squareup/javapoet/WildcardTypeName;" line="57"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withoutAnnotations" desc="()Lcom/squareup/javapoet/TypeName;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="65"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtypeOf" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/WildcardTypeName;" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtypeOf" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/WildcardTypeName;" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supertypeOf" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/WildcardTypeName;" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supertypeOf" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/WildcardTypeName;" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/type/WildcardType;)Lcom/squareup/javapoet/TypeName;" line="101"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljavax/lang/model/type/WildcardType;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;" line="107"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/WildcardType;)Lcom/squareup/javapoet/TypeName;" line="121"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/reflect/WildcardType;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;" line="125"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="180"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/CodeBlock" sourcefilename="CodeBlock.java"><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/CodeBlock$Builder;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="84"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock;" line="105"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="join" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Lcom/squareup/javapoet/CodeBlock;" line="114"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joining" desc="(Ljava/lang/String;)Ljava/util/stream/Collector;" line="123"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joining" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Collector;" line="137"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/squareup/javapoet/CodeBlock$Builder;" line="149"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/CodeBlock$Builder;" line="153"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$0" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;" line="124"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$4" desc="(Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock$Builder;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$7" desc="(Lcom/squareup/javapoet/CodeBlock$Builder;Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;)Lcom/squareup/javapoet/CodeBlock;" line="143"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="157"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="36"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/CodeBlock$CodeBlockJoiner" sourcefilename="CodeBlock.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock$Builder;)V" line="441"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;" line="449"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="merge" desc="(Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;)Lcom/squareup/javapoet/CodeBlock$CodeBlockJoiner;" line="459"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="join" desc="()Lcom/squareup/javapoet/CodeBlock;" line="467"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/TypeSpec$Kind" sourcefilename="TypeSpec.java"><method name="&lt;clinit&gt;" desc="()V" line="368"><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V" line="398"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/CodeBlock$Builder" sourcefilename="CodeBlock.java"><method name="&lt;init&gt;" desc="()V" line="160"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="167"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNamed" desc="(Ljava/lang/String;Ljava/util/Map;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="182"><counter type="INSTRUCTION" missed="0" covered="191"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="239"><counter type="INSTRUCTION" missed="2" covered="281"/><counter type="BRANCH" missed="1" covered="39"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNoArgPlaceholder" desc="(C)Z" line="315"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addArgument" desc="(Ljava/lang/String;CLjava/lang/Object;)V" line="319"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argToName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="339"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argToLiteral" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="348"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="352"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argToType" desc="(Ljava/lang/Object;)Lcom/squareup/javapoet/TypeName;" line="356"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginControlFlow" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="368"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextControlFlow" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="378"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endControlFlow" desc="()Lcom/squareup/javapoet/CodeBlock$Builder;" line="385"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endControlFlow" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="395"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="401"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="408"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/CodeBlock$Builder;" line="412"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="()Lcom/squareup/javapoet/CodeBlock$Builder;" line="418"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unindent" desc="()Lcom/squareup/javapoet/CodeBlock$Builder;" line="423"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()Lcom/squareup/javapoet/CodeBlock$Builder;" line="428"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/CodeBlock;" line="434"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="792"/><counter type="BRANCH" missed="1" covered="94"/><counter type="LINE" missed="0" covered="141"/><counter type="COMPLEXITY" missed="1" covered="69"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/CodeWriter$Multiset" sourcefilename="CodeWriter.java"><method name="&lt;init&gt;" desc="()V" line="527"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="531"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)V" line="536"><counter type="INSTRUCTION" missed="12" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="544"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="61"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/Util" sourcefilename="Util.java"><method name="immutableMultimap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="40"><counter type="INSTRUCTION" missed="1" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkArgument" desc="(ZLjava/lang/String;[Ljava/lang/Object;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNotNull" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkState" desc="(ZLjava/lang/String;[Ljava/lang/Object;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableList" desc="(Ljava/util/Collection;)Ljava/util/List;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableSet" desc="(Ljava/util/Collection;)Ljava/util/Set;" line="70"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="union" desc="(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;" line="74"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireExactlyOneOf" desc="(Ljava/util/Set;[Ljavax/lang/model/element/Modifier;)V" line="81"><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="characterLiteralWithoutSingleQuotes" desc="(C)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringLiteralWithDoubleQuotes" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="243"/><counter type="BRANCH" missed="2" covered="35"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="2" covered="31"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/LineWrapper$FlushType" sourcefilename="LineWrapper.java"><method name="&lt;clinit&gt;" desc="()V" line="139"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/AnnotationSpec" sourcefilename="AnnotationSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/AnnotationSpec$Builder;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;Z)V" line="54"><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAnnotationValues" desc="(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/annotation/Annotation;)Lcom/squareup/javapoet/AnnotationSpec;" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/annotation/Annotation;Z)Lcom/squareup/javapoet/AnnotationSpec;" line="113"><counter type="INSTRUCTION" missed="15" covered="91"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/element/AnnotationMirror;)Lcom/squareup/javapoet/AnnotationSpec;" line="143"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="155"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="164"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="172"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="179"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="460"/><counter type="BRANCH" missed="3" covered="39"/><counter type="LINE" missed="3" covered="82"/><counter type="COMPLEXITY" missed="3" covered="30"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/AnnotationSpec$Builder" sourcefilename="AnnotationSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeName;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMember" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="203"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMember" desc="(Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="207"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMemberForValue" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="218"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/AnnotationSpec;" line="240"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$0" desc="(Ljava/lang/String;)Ljava/util/List;" line="207"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="187"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/ParameterSpec" sourcefilename="ParameterSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/ParameterSpec$Builder;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasModifier" desc="(Ljavax/lang/model/element/Modifier;)Z" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;Z)V" line="54"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/element/VariableElement;)Lcom/squareup/javapoet/ParameterSpec;" line="87"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parametersOf" desc="(Ljavax/lang/model/element/ExecutableElement;)Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidParameterName" desc="(Ljava/lang/String;)Z" line="109"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="116"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="123"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/ParameterSpec$Builder;" line="127"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="131"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="234"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="4" covered="46"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/TypeSpec$Builder" sourcefilename="TypeSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeSpec$Kind;Ljava/lang/String;Lcom/squareup/javapoet/CodeBlock;)V" line="414"><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="439"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="444"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotations" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="449"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="457"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="463"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="467"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addModifiers" desc="([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="471"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypeVariables" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="476"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypeVariable" desc="(Lcom/squareup/javapoet/TypeVariableName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="484"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superclass" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="489"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superclass" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="498"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superclass" desc="(Ljava/lang/reflect/Type;Z)Lcom/squareup/javapoet/TypeSpec$Builder;" line="502"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superclass" desc="(Ljavax/lang/model/type/TypeMirror;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="513"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superclass" desc="(Ljavax/lang/model/type/TypeMirror;Z)Lcom/squareup/javapoet/TypeSpec$Builder;" line="517"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuperinterfaces" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="527"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuperinterface" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="535"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuperinterface" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="541"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuperinterface" desc="(Ljava/lang/reflect/Type;Z)Lcom/squareup/javapoet/TypeSpec$Builder;" line="545"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRawType" desc="(Ljava/lang/reflect/Type;)Ljava/lang/Class;" line="556"><counter type="INSTRUCTION" missed="11" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuperinterface" desc="(Ljavax/lang/model/type/TypeMirror;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="566"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuperinterface" desc="(Ljavax/lang/model/type/TypeMirror;Z)Lcom/squareup/javapoet/TypeSpec$Builder;" line="571"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnumConstant" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="581"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnumConstant" desc="(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="585"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFields" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="590"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addField" desc="(Lcom/squareup/javapoet/FieldSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="598"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addField" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="603"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addField" desc="(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="607"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStaticBlock" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="611"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInitializerBlock" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="616"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMethods" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="628"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMethod" desc="(Lcom/squareup/javapoet/MethodSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="636"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypes" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="641"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addType" desc="(Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="649"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addOriginatingElement" desc="(Ljavax/lang/model/element/Element;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="654"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alwaysQualify" desc="([Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="659"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avoidClashesWithNestedClasses" desc="(Ljavax/lang/model/element/TypeElement;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="696"><counter type="INSTRUCTION" missed="1" covered="76"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avoidClashesWithNestedClasses" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="740"><counter type="INSTRUCTION" missed="5" covered="67"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/TypeSpec;" line="755"><counter type="INSTRUCTION" missed="9" covered="503"/><counter type="BRANCH" missed="7" covered="63"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="7" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="1272"/><counter type="BRANCH" missed="27" covered="131"/><counter type="LINE" missed="4" covered="202"/><counter type="COMPLEXITY" missed="26" covered="92"/><counter type="METHOD" missed="0" covered="39"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/TypeSpec" sourcefilename="TypeSpec.java"><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeSpec$Builder;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeSpec;)V" line="101"><counter type="INSTRUCTION" missed="4" covered="67"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasModifier" desc="(Ljavax/lang/model/element/Modifier;)Z" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classBuilder" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="128"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classBuilder" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="132"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interfaceBuilder" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="136"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interfaceBuilder" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="140"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enumBuilder" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="144"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enumBuilder" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="148"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anonymousClassBuilder" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="anonymousClassBuilder" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="156"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotationBuilder" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="160"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotationBuilder" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/TypeSpec$Builder;" line="164"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/TypeSpec$Builder;" line="168"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/util/Set;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="557"/><counter type="BRANCH" missed="4" covered="80"/><counter type="LINE" missed="0" covered="108"/><counter type="COMPLEXITY" missed="4" covered="39"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="347"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="354"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="358"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="985"/><counter type="BRANCH" missed="10" covered="88"/><counter type="LINE" missed="3" covered="190"/><counter type="COMPLEXITY" missed="11" covered="57"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/TypeVariableName" sourcefilename="TypeVariableName.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="1" covered="43"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="(Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutAnnotations" desc="()Lcom/squareup/javapoet/TypeName;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withBounds" desc="([Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeVariableName;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withBounds" desc="([Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeVariableName;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withBounds" desc="(Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;" line="69"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;Ljava/util/List;)Lcom/squareup/javapoet/TypeVariableName;" line="77"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="83"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/TypeVariableName;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;[Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeVariableName;" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeVariableName;" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/type/TypeVariable;)Lcom/squareup/javapoet/TypeVariableName;" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/type/TypeVariable;Ljava/util/Map;)Lcom/squareup/javapoet/TypeVariableName;" line="117"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/element/TypeParameterElement;)Lcom/squareup/javapoet/TypeVariableName;" line="136"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/TypeVariable;)Lcom/squareup/javapoet/TypeVariableName;" line="149"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/reflect/TypeVariable;Ljava/util/Map;)Lcom/squareup/javapoet/TypeVariableName;" line="155"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="272"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="3" covered="50"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/ParameterizedTypeName" sourcefilename="ParameterizedTypeName.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/ParameterizedTypeName;Lcom/squareup/javapoet/ClassName;Ljava/util/List;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/ParameterizedTypeName;Lcom/squareup/javapoet/ClassName;Ljava/util/List;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="(Ljava/util/List;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="57"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutAnnotations" desc="()Lcom/squareup/javapoet/TypeName;" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="68"><counter type="INSTRUCTION" missed="8" covered="67"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestedClass" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="97"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nestedClass" desc="(Ljava/lang/String;Ljava/util/List;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="107"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lcom/squareup/javapoet/ClassName;[Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="114"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/ParameterizedType;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/reflect/ParameterizedType;Ljava/util/Map;)Lcom/squareup/javapoet/ParameterizedTypeName;" line="129"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="233"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="7" covered="40"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/TypeName$1" sourcefilename="TypeName.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="248"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimitive" desc="(Ljavax/lang/model/type/PrimitiveType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="250"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclared" desc="(Ljavax/lang/model/type/DeclaredType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="273"><counter type="INSTRUCTION" missed="13" covered="62"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitError" desc="(Ljavax/lang/model/type/ErrorType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="295"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArray" desc="(Ljavax/lang/model/type/ArrayType;Ljava/lang/Void;)Lcom/squareup/javapoet/ArrayTypeName;" line="299"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeVariable" desc="(Ljavax/lang/model/type/TypeVariable;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="303"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWildcard" desc="(Ljavax/lang/model/type/WildcardType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="307"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNoType" desc="(Ljavax/lang/model/type/NoType;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="311"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultAction" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/Void;)Lcom/squareup/javapoet/TypeName;" line="316"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="127"/><counter type="BRANCH" missed="5" covered="18"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/JavaFile$Builder" sourcefilename="JavaFile.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)V" line="279"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFileComment" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/JavaFile$Builder;" line="291"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStaticImport" desc="(Ljava/lang/Enum;)Lcom/squareup/javapoet/JavaFile$Builder;" line="296"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStaticImport" desc="(Ljava/lang/Class;[Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;" line="300"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStaticImport" desc="(Lcom/squareup/javapoet/ClassName;[Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;" line="304"><counter type="INSTRUCTION" missed="4" covered="71"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipJavaLangImports" desc="(Z)Lcom/squareup/javapoet/JavaFile$Builder;" line="323"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/JavaFile$Builder;" line="328"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/JavaFile;" line="333"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="134"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/AnnotationSpec$Visitor" sourcefilename="AnnotationSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/AnnotationSpec$Builder;)V" line="255"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultAction" desc="(Ljava/lang/Object;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="260"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotation" desc="(Ljavax/lang/model/element/AnnotationMirror;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="264"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnumConstant" desc="(Ljavax/lang/model/element/VariableElement;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="268"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitType" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="272"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArray" desc="(Ljava/util/List;Ljava/lang/String;)Lcom/squareup/javapoet/AnnotationSpec$Builder;" line="276"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/JavaFile$1" sourcefilename="JavaFile.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/TypeName" sourcefilename="TypeName.java"><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="([Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/TypeName;" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="(Ljava/util/List;)Lcom/squareup/javapoet/TypeName;" line="116"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutAnnotations" desc="()Lcom/squareup/javapoet/TypeName;" line="121"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concatAnnotations" desc="(Ljava/util/List;)Ljava/util/List;" line="125"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotated" desc="()Z" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitive" desc="()Z" line="139"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBoxedPrimitive" desc="()Z" line="147"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="box" desc="()Lcom/squareup/javapoet/TypeName;" line="162"><counter type="INSTRUCTION" missed="32" covered="24"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unbox" desc="()Lcom/squareup/javapoet/TypeName;" line="182"><counter type="INSTRUCTION" missed="14" covered="56"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="196"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="223"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAnnotations" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="233"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/type/TypeMirror;)Lcom/squareup/javapoet/TypeName;" line="243"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/type/TypeMirror;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;" line="248"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/TypeName;" line="323"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/Type;Ljava/util/Map;)Lcom/squareup/javapoet/TypeName;" line="327"><counter type="INSTRUCTION" missed="28" covered="78"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="([Ljava/lang/reflect/Type;)Ljava/util/List;" line="360"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="([Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/util/List;" line="364"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrayComponent" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeName;" line="373"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArray" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ArrayTypeName;" line="380"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="98" covered="531"/><counter type="BRANCH" missed="37" covered="75"/><counter type="LINE" missed="12" covered="115"/><counter type="COMPLEXITY" missed="34" covered="48"/><counter type="METHOD" missed="2" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/ParameterSpec$Builder" sourcefilename="ParameterSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="151"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addJavadoc" desc="(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="156"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAnnotations" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="161"><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/AnnotationSpec;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="169"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Lcom/squareup/javapoet/ClassName;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="174"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Ljava/lang/Class;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="179"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addModifiers" desc="([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="183"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addModifiers" desc="(Ljava/lang/Iterable;)Lcom/squareup/javapoet/ParameterSpec$Builder;" line="188"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/squareup/javapoet/ParameterSpec;" line="199"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="107"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/FieldSpec" sourcefilename="FieldSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/FieldSpec$Builder;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasModifier" desc="(Ljavax/lang/model/element/Modifier;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;Ljava/util/Set;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="68"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="90"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/reflect/Type;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;" line="97"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/FieldSpec$Builder;" line="101"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="166"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="8" covered="34"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/JavaFile$2" sourcefilename="JavaFile.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/JavaFile;Ljava/net/URI;Ljavax/tools/JavaFileObject$Kind;)V" line="248"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCharContent" desc="(Z)Ljava/lang/String;" line="251"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openInputStream" desc="()Ljava/io/InputStream;" line="254"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastModified" desc="()J" line="257"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/LineWrapper$RecordingAppendable" sourcefilename="LineWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="154"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="162"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/MethodSpec" sourcefilename="MethodSpec.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/MethodSpec$Builder;)V" line="58"><counter type="INSTRUCTION" missed="2" covered="99"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastParameterIsArray" desc="(Ljava/util/List;)Z" line="79"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;Ljava/lang/String;Ljava/util/Set;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="201"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="javadocWithParameters" desc="()Lcom/squareup/javapoet/CodeBlock;" line="144"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasModifier" desc="(Ljavax/lang/model/element/Modifier;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstructor" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="166"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="173"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodBuilder" desc="(Ljava/lang/String;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="188"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructorBuilder" desc="()Lcom/squareup/javapoet/MethodSpec$Builder;" line="192"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overriding" desc="(Ljavax/lang/model/element/ExecutableElement;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="205"><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overriding" desc="(Ljavax/lang/model/element/ExecutableElement;Ljavax/lang/model/type/DeclaredType;Ljavax/lang/model/util/Types;)Lcom/squareup/javapoet/MethodSpec$Builder;" line="259"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/MethodSpec$Builder;" line="280"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="713"/><counter type="BRANCH" missed="8" covered="60"/><counter type="LINE" missed="2" covered="135"/><counter type="COMPLEXITY" missed="8" covered="40"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/ArrayTypeName" sourcefilename="ArrayTypeName.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeName;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/TypeName;Ljava/util/List;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotated" desc="(Ljava/util/List;)Lcom/squareup/javapoet/ArrayTypeName;" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutAnnotations" desc="()Lcom/squareup/javapoet/TypeName;" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;Z)Lcom/squareup/javapoet/CodeWriter;" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLeafType" desc="(Lcom/squareup/javapoet/CodeWriter;)Lcom/squareup/javapoet/CodeWriter;" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitBrackets" desc="(Lcom/squareup/javapoet/CodeWriter;Z)Lcom/squareup/javapoet/CodeWriter;" line="67"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/ArrayTypeName;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/reflect/Type;)Lcom/squareup/javapoet/ArrayTypeName;" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljavax/lang/model/type/ArrayType;)Lcom/squareup/javapoet/ArrayTypeName;" line="93"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljavax/lang/model/type/ArrayType;Ljava/util/Map;)Lcom/squareup/javapoet/ArrayTypeName;" line="98"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/reflect/GenericArrayType;)Lcom/squareup/javapoet/ArrayTypeName;" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/reflect/GenericArrayType;Ljava/util/Map;)Lcom/squareup/javapoet/ArrayTypeName;" line="107"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="114"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/squareup/javapoet/JavaFile" sourcefilename="JavaFile.java"><method name="&lt;init&gt;" desc="(Lcom/squareup/javapoet/JavaFile$Builder;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillAlwaysQualifiedNames" desc="(Lcom/squareup/javapoet/TypeSpec;Ljava/util/Set;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/lang/Appendable;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/nio/file/Path;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V" line="114"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeToPath" desc="(Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeToPath" desc="(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/nio/file/Path;" line="131"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/io/File;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeToFile" desc="(Ljava/io/File;)Ljava/io/File;" line="159"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Ljavax/annotation/processing/Filer;)V" line="165"><counter type="INSTRUCTION" missed="8" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emit" desc="(Lcom/squareup/javapoet/CodeWriter;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="223"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="230"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="235"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toJavaFileObject" desc="()Ljavax/tools/JavaFileObject;" line="244"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/String;Lcom/squareup/javapoet/TypeSpec;)Lcom/squareup/javapoet/JavaFile$Builder;" line="263"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBuilder" desc="()Lcom/squareup/javapoet/JavaFile$Builder;" line="269"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="80" covered="440"/><counter type="BRANCH" missed="8" covered="30"/><counter type="LINE" missed="21" covered="80"/><counter type="COMPLEXITY" missed="10" covered="27"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavaFile.java"><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="21" mb="1" cb="3"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="19" mb="0" cb="2"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="22" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="11" mb="0" cb="2"/><line nr="196" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="15" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="2"/><line nr="205" mi="0" ci="8" mb="0" cb="2"/><line nr="206" mi="0" ci="2" mb="1" cb="1"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="2" cb="0"/><line nr="224" mi="4" ci="0" mb="2" cb="0"/><line nr="225" mi="7" ci="0" mb="2" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="20" mb="0" cb="2"/><line nr="246" mi="0" ci="14" mb="0" cb="0"/><line nr="248" mi="0" ci="14" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="9" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="9" ci="0" mb="0" cb="0"/><line nr="270" mi="6" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="13" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="1" ci="8" mb="1" cb="1"/><line nr="305" mi="1" ci="8" mb="1" cb="1"/><line nr="306" mi="1" ci="9" mb="1" cb="1"/><line nr="307" mi="0" ci="16" mb="0" cb="2"/><line nr="308" mi="1" ci="13" mb="1" cb="1"/><line nr="309" mi="0" ci="15" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="605"/><counter type="BRANCH" missed="12" covered="36"/><counter type="LINE" missed="23" covered="108"/><counter type="COMPLEXITY" missed="16" covered="42"/><counter type="METHOD" missed="7" covered="27"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="WildcardTypeName.java"><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="1" ci="15" mb="1" cb="1"/><line nr="46" mi="0" ci="12" mb="0" cb="2"/><line nr="47" mi="1" ci="9" mb="2" cb="2"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="2"/><line nr="51" mi="1" ci="9" mb="2" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="66" mi="0" ci="13" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="180"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeVariableName.java"><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="2"/><line nr="48" mi="1" ci="16" mb="2" cb="2"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="12" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="17" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="272"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="3" covered="50"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayTypeName.java"><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="114"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodSpec.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="1" ci="17" mb="1" cb="3"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="1" ci="17" mb="1" cb="3"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="1" cb="1"/><line nr="80" mi="1" ci="10" mb="1" cb="1"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="97" mi="0" ci="16" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="2"/><line nr="104" mi="0" ci="12" mb="0" cb="4"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="1" cb="3"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="2"/><line nr="119" mi="0" ci="6" mb="0" cb="2"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="12" mb="0" cb="4"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="16" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="2" ci="3" mb="1" cb="1"/><line nr="167" mi="2" ci="2" mb="1" cb="1"/><line nr="168" mi="2" ci="5" mb="1" cb="1"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="2"/><line nr="209" mi="0" ci="12" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="2"/><line nr="216" mi="0" ci="12" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="11" mb="0" cb="2"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="2"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="11" mb="0" cb="2"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="11" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="10" mb="0" cb="2"/><line nr="273" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="315" mi="1" ci="17" mb="1" cb="3"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="9" mb="0" cb="2"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="6" ci="3" mb="1" cb="1"/><line nr="334" mi="10" ci="0" mb="2" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="10" mb="0" cb="2"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="6" ci="3" mb="1" cb="1"/><line nr="370" mi="10" ci="0" mb="2" cb="0"/><line nr="371" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="1" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="1" ci="11" mb="1" cb="1"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="9" mb="0" cb="2"/><line nr="393" mi="0" ci="10" mb="0" cb="2"/><line nr="394" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="8" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="6" ci="3" mb="1" cb="1"/><line nr="423" mi="10" ci="0" mb="2" cb="0"/><line nr="424" mi="5" ci="0" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="426" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="454" mi="15" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="463" mi="1" ci="9" mb="1" cb="1"/><line nr="464" mi="0" ci="8" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="10" mb="0" cb="0"/><line nr="490" mi="0" ci="6" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="10" mb="0" cb="0"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="0" ci="10" mb="0" cb="0"/><line nr="525" mi="0" ci="6" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="1082"/><counter type="BRANCH" missed="20" covered="76"/><counter type="LINE" missed="20" covered="213"/><counter type="COMPLEXITY" missed="20" covered="81"/><counter type="METHOD" missed="3" covered="50"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NameAllocator.java"><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="4"/><line nr="115" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="22" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="12" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="178"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationSpec.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="4"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="17" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="16" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="8" mb="0" cb="2"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="14" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="1" ci="1" mb="0" cb="0"/><line nr="137" mi="14" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="13" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="0" cb="2"/><line nr="166" mi="0" ci="13" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="2" ci="3" mb="1" cb="1"/><line nr="173" mi="2" ci="2" mb="1" cb="1"/><line nr="174" mi="2" ci="5" mb="1" cb="1"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="0" cb="0"/><line nr="220" mi="0" ci="10" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="11" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="2"/><line nr="225" mi="0" ci="18" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="228" mi="0" ci="11" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="11" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="234" mi="0" ci="14" mb="0" cb="0"/><line nr="236" mi="0" ci="11" mb="0" cb="0"/><line nr="240" mi="0" ci="13" mb="0" cb="2"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="10" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="13" mb="0" cb="0"/><line nr="268" mi="0" ci="18" mb="0" cb="0"/><line nr="272" mi="0" ci="12" mb="0" cb="0"/><line nr="276" mi="0" ci="11" mb="0" cb="2"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="722"/><counter type="BRANCH" missed="3" covered="53"/><counter type="LINE" missed="3" covered="118"/><counter type="COMPLEXITY" missed="3" covered="49"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ParameterizedTypeName.java"><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="1" ci="16" mb="1" cb="3"/><line nr="50" mi="0" ci="11" mb="0" cb="2"/><line nr="51" mi="1" ci="16" mb="2" cb="2"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="15" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="13" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="2"/><line nr="131" mi="0" ci="6" mb="1" cb="1"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="2"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="233"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="7" covered="40"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineWrapper.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="5" ci="3" mb="1" cb="1"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="4"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="14" mb="0" cb="4"/><line nr="77" mi="0" ci="8" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="5" ci="3" mb="1" cb="1"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="5" ci="3" mb="1" cb="1"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="4" ci="3" mb="1" cb="1"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="3"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="11" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="16" mb="0" cb="0"/><line nr="140" mi="0" ci="18" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="307"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="3" covered="67"/><counter type="COMPLEXITY" missed="6" covered="25"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CodeWriter.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="2"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="1" ci="22" mb="1" cb="1"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="1" ci="15" mb="1" cb="1"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="1" ci="10" mb="1" cb="1"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="11" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="2"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="2"/><line nr="180" mi="0" ci="12" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="2"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="2"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="2"/><line nr="203" mi="0" ci="6" mb="0" cb="2"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="11" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="2"/><line nr="208" mi="0" ci="14" mb="0" cb="2"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="10" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="2"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="12"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="9" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="2"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="4"/><line nr="259" mi="0" ci="9" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="2"/><line nr="262" mi="1" ci="8" mb="1" cb="1"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="11" mb="0" cb="2"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="11" mb="0" cb="2"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="2"/><line nr="308" mi="0" ci="6" mb="0" cb="2"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="7" mb="0" cb="4"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="7" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="12" mb="0" cb="0"/><line nr="334" mi="0" ci="8" mb="0" cb="2"/><line nr="335" mi="0" ci="6" mb="0" cb="2"/><line nr="336" mi="0" ci="7" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="2" ci="3" mb="1" cb="1"/><line nr="347" mi="0" ci="12" mb="0" cb="0"/><line nr="348" mi="0" ci="9" mb="0" cb="0"/><line nr="349" mi="0" ci="10" mb="0" cb="4"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="2"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="2"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="2"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="8" mb="0" cb="2"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="6" mb="0" cb="2"/><line nr="390" mi="0" ci="8" mb="0" cb="4"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="2" mb="0" cb="2"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="2"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="2"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="2"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="6" mb="0" cb="2"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="7" mb="0" cb="0"/><line nr="426" mi="0" ci="2" mb="0" cb="2"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="429" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="10" mb="0" cb="2"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="5" mb="0" cb="2"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="446" mi="0" ci="13" mb="0" cb="4"/><line nr="447" mi="0" ci="7" mb="0" cb="0"/><line nr="451" mi="0" ci="6" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="2"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="12" mb="0" cb="0"/><line nr="461" mi="0" ci="7" mb="0" cb="2"/><line nr="462" mi="0" ci="9" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="19" mb="0" cb="2"/><line nr="476" mi="0" ci="2" mb="0" cb="2"/><line nr="477" mi="0" ci="9" mb="0" cb="6"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="479" mi="0" ci="9" mb="0" cb="2"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="2"/><line nr="484" mi="0" ci="3" mb="0" cb="2"/><line nr="485" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="4" mb="0" cb="2"/><line nr="495" mi="0" ci="3" mb="0" cb="2"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="2"/><line nr="498" mi="0" ci="4" mb="0" cb="0"/><line nr="499" mi="0" ci="4" mb="0" cb="2"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="511" mi="0" ci="8" mb="0" cb="2"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="6" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="9" mb="0" cb="0"/><line nr="532" mi="0" ci="9" mb="0" cb="0"/><line nr="533" mi="0" ci="1" mb="0" cb="0"/><line nr="536" mi="0" ci="9" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="1" cb="1"/><line nr="538" mi="12" ci="0" mb="0" cb="0"/><line nr="540" mi="0" ci="9" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="544" mi="0" ci="13" mb="0" cb="2"/><counter type="INSTRUCTION" missed="18" covered="1204"/><counter type="BRANCH" missed="6" covered="148"/><counter type="LINE" missed="1" covered="253"/><counter type="COMPLEXITY" missed="6" covered="117"/><counter type="METHOD" missed="0" covered="41"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ClassName.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="2"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="0" ci="14" mb="0" cb="6"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="2"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="14" mb="0" cb="0"/><line nr="113" mi="0" ci="19" mb="0" cb="2"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="10" mb="0" cb="2"/><line nr="165" mi="2" ci="9" mb="1" cb="1"/><line nr="166" mi="0" ci="10" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="2"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="2"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="4"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="13" mb="0" cb="2"/><line nr="201" mi="0" ci="11" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="21" mb="0" cb="2"/><line nr="206" mi="0" ci="12" mb="0" cb="4"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="16" mb="0" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="19" mb="0" cb="0"/><line nr="233" mi="0" ci="11" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="12" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="12" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="2"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="7" mb="0" cb="4"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="9" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="2"/><line nr="281" mi="0" ci="6" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="8" mb="0" cb="2"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="608"/><counter type="BRANCH" missed="1" covered="67"/><counter type="LINE" missed="1" covered="103"/><counter type="COMPLEXITY" missed="2" covered="59"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ParameterSpec.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="2" ci="3" mb="1" cb="1"/><line nr="66" mi="2" ci="2" mb="1" cb="1"/><line nr="67" mi="2" ci="5" mb="1" cb="1"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="2"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="4"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="3" mb="1" cb="1"/><line nr="162" mi="10" ci="0" mb="2" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="2"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="12" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="341"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="10" covered="71"/><counter type="COMPLEXITY" missed="8" covered="27"/><counter type="METHOD" missed="3" covered="20"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TypeName.java"><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="10" mb="0" cb="4"/><line nr="147" mi="0" ci="8" mb="1" cb="1"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="0" ci="4" mb="1" cb="1"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="1" cb="1"/><line nr="152" mi="0" ci="4" mb="1" cb="1"/><line nr="153" mi="0" ci="4" mb="1" cb="1"/><line nr="154" mi="0" ci="4" mb="1" cb="1"/><line nr="162" mi="0" ci="5" mb="0" cb="2"/><line nr="163" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="2" ci="3" mb="1" cb="1"/><line nr="165" mi="2" ci="3" mb="1" cb="1"/><line nr="166" mi="2" ci="3" mb="1" cb="1"/><line nr="167" mi="0" ci="5" mb="1" cb="1"/><line nr="168" mi="5" ci="0" mb="2" cb="0"/><line nr="169" mi="5" ci="0" mb="2" cb="0"/><line nr="170" mi="5" ci="0" mb="2" cb="0"/><line nr="171" mi="5" ci="0" mb="2" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="2"/><line nr="183" mi="0" ci="6" mb="0" cb="2"/><line nr="184" mi="2" ci="4" mb="1" cb="1"/><line nr="185" mi="2" ci="4" mb="1" cb="1"/><line nr="186" mi="2" ci="4" mb="1" cb="1"/><line nr="187" mi="0" ci="6" mb="0" cb="2"/><line nr="188" mi="2" ci="4" mb="1" cb="1"/><line nr="189" mi="2" ci="4" mb="1" cb="1"/><line nr="190" mi="2" ci="4" mb="1" cb="1"/><line nr="191" mi="2" ci="4" mb="1" cb="1"/><line nr="192" mi="0" ci="11" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="2"/><line nr="197" mi="0" ci="4" mb="0" cb="2"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="1" ci="1" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="4" ci="3" mb="1" cb="1"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="2"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="14" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="1" cb="8"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="2"/><line nr="277" mi="0" ci="6" mb="1" cb="1"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="1" cb="3"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="12" mb="0" cb="2"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="1" cb="1"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="6" mb="1" cb="1"/><line nr="312" mi="6" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="11" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="2"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="2" ci="3" mb="1" cb="1"/><line nr="330" mi="0" ci="5" mb="0" cb="2"/><line nr="331" mi="2" ci="3" mb="1" cb="1"/><line nr="332" mi="2" ci="3" mb="1" cb="1"/><line nr="333" mi="0" ci="5" mb="0" cb="2"/><line nr="334" mi="0" ci="5" mb="0" cb="2"/><line nr="335" mi="2" ci="3" mb="1" cb="1"/><line nr="336" mi="2" ci="3" mb="1" cb="1"/><line nr="337" mi="2" ci="3" mb="1" cb="1"/><line nr="338" mi="0" ci="9" mb="0" cb="2"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="2"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="1" cb="1"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="2"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="1" cb="1"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="11" ci="0" mb="0" cb="0"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="0" ci="16" mb="0" cb="2"/><line nr="366" mi="0" ci="6" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="2" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="0" cb="2"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="658"/><counter type="BRANCH" missed="42" covered="93"/><counter type="LINE" missed="17" covered="143"/><counter type="COMPLEXITY" missed="39" covered="67"/><counter type="METHOD" missed="2" covered="33"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CodeBlock.java"><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="2" ci="3" mb="1" cb="1"/><line nr="85" mi="2" ci="2" mb="1" cb="1"/><line nr="86" mi="2" ci="5" mb="1" cb="1"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="12" mb="0" cb="2"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="2"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="4"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="11" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="2"/><line nr="217" mi="0" ci="8" mb="0" cb="0"/><line nr="218" mi="0" ci="23" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="2"/><line nr="246" mi="0" ci="5" mb="0" cb="2"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="2"/><line nr="249" mi="0" ci="8" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="2"/><line nr="260" mi="0" ci="15" mb="0" cb="2"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="2"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="9" mb="0" cb="2"/><line nr="269" mi="0" ci="11" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="2"/><line nr="279" mi="0" ci="10" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="10" mb="0" cb="4"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="22" mb="0" cb="0"/><line nr="290" mi="2" ci="9" mb="1" cb="3"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="294" mi="0" ci="11" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="8" mb="0" cb="2"/><line nr="299" mi="0" ci="14" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="2"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="8" mb="0" cb="2"/><line nr="304" mi="0" ci="4" mb="0" cb="2"/><line nr="305" mi="0" ci="12" mb="0" cb="0"/><line nr="308" mi="0" ci="8" mb="0" cb="2"/><line nr="309" mi="0" ci="16" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="25" mb="0" cb="14"/><line nr="319" mi="0" ci="2" mb="0" cb="5"/><line nr="321" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="7" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="8" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="6" mb="0" cb="2"/><line nr="340" mi="0" ci="7" mb="0" cb="2"/><line nr="341" mi="0" ci="7" mb="0" cb="2"/><line nr="342" mi="0" ci="7" mb="0" cb="2"/><line nr="343" mi="0" ci="7" mb="0" cb="2"/><line nr="344" mi="0" ci="11" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="2"/><line nr="356" mi="0" ci="6" mb="0" cb="2"/><line nr="357" mi="0" ci="7" mb="0" cb="2"/><line nr="358" mi="0" ci="8" mb="0" cb="2"/><line nr="359" mi="0" ci="7" mb="0" cb="2"/><line nr="360" mi="0" ci="11" mb="0" cb="0"/><line nr="368" mi="0" ci="12" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="13" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="13" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="10" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="6" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="2"/><line nr="450" mi="0" ci="8" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="4" ci="0" mb="0" cb="0"/><line nr="460" mi="3" ci="0" mb="2" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="986"/><counter type="BRANCH" missed="6" covered="99"/><counter type="LINE" missed="6" covered="188"/><counter type="COMPLEXITY" missed="6" covered="88"/><counter type="METHOD" missed="1" covered="39"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FieldSpec.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="16" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="2" ci="3" mb="1" cb="1"/><line nr="69" mi="2" ci="2" mb="1" cb="1"/><line nr="70" mi="2" ci="5" mb="1" cb="1"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="3" mb="1" cb="1"/><line nr="136" mi="10" ci="0" mb="2" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="0" cb="2"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="262"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="14" covered="57"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Util.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="2"/><line nr="42" mi="1" ci="5" mb="1" cb="1"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="2"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="2"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="16" mb="0" cb="2"/><line nr="83" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="1" ci="11" mb="1" cb="1"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="9"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="16" mb="0" cb="2"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="4"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="243"/><counter type="BRANCH" missed="2" covered="35"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="2" covered="31"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeSpec.java"><line nr="48" mi="2" ci="6" mb="1" cb="1"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="2"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="4" ci="5" mb="2" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="13" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="13" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="13" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="13" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="2"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="12" mb="2" cb="4"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="13" mb="0" cb="2"/><line nr="209" mi="0" ci="10" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="9" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="15" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="19" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="2"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="2"/><line nr="242" mi="0" ci="6" mb="0" cb="2"/><line nr="243" mi="0" ci="10" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="11" mb="0" cb="2"/><line nr="252" mi="0" ci="6" mb="0" cb="2"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="2"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="2"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="13" mb="1" cb="5"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="12" mb="0" cb="2"/><line nr="283" mi="0" ci="5" mb="0" cb="2"/><line nr="284" mi="0" ci="6" mb="0" cb="2"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="2"/><line nr="290" mi="0" ci="6" mb="0" cb="2"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="12" mb="0" cb="2"/><line nr="297" mi="0" ci="5" mb="0" cb="2"/><line nr="298" mi="0" ci="6" mb="0" cb="2"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="2"/><line nr="305" mi="0" ci="6" mb="1" cb="1"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="12" mb="0" cb="2"/><line nr="312" mi="0" ci="4" mb="0" cb="2"/><line nr="313" mi="0" ci="6" mb="0" cb="2"/><line nr="314" mi="0" ci="8" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="12" mb="0" cb="2"/><line nr="320" mi="0" ci="4" mb="0" cb="2"/><line nr="321" mi="0" ci="6" mb="0" cb="2"/><line nr="322" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="12" mb="0" cb="2"/><line nr="328" mi="0" ci="6" mb="0" cb="2"/><line nr="329" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="4"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="2" ci="3" mb="1" cb="1"/><line nr="348" mi="2" ci="2" mb="1" cb="1"/><line nr="349" mi="2" ci="5" mb="1" cb="1"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="20" mb="0" cb="0"/><line nr="369" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="9" mb="0" cb="0"/><line nr="376" mi="0" ci="16" mb="0" cb="0"/><line nr="377" mi="0" ci="12" mb="0" cb="0"/><line nr="378" mi="0" ci="8" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="9" mb="0" cb="0"/><line nr="388" mi="0" ci="16" mb="0" cb="0"/><line nr="389" mi="0" ci="12" mb="0" cb="0"/><line nr="390" mi="0" ci="8" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="5" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="5" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="2" ci="14" mb="1" cb="3"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="9" mb="0" cb="2"/><line nr="450" mi="0" ci="11" mb="0" cb="2"/><line nr="451" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="6" mb="0" cb="0"/><line nr="458" mi="0" ci="5" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="476" mi="0" ci="9" mb="0" cb="2"/><line nr="477" mi="0" ci="11" mb="0" cb="2"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="489" mi="0" ci="18" mb="0" cb="2"/><line nr="490" mi="0" ci="8" mb="0" cb="2"/><line nr="491" mi="0" ci="10" mb="0" cb="0"/><line nr="492" mi="0" ci="10" mb="0" cb="2"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="5" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="1" cb="1"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="1" cb="1"/><line nr="506" mi="0" ci="4" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="5" mb="0" cb="0"/><line nr="518" mi="0" ci="5" mb="2" cb="2"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="520" mi="0" ci="4" mb="0" cb="0"/><line nr="521" mi="0" ci="4" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="9" mb="0" cb="2"/><line nr="528" mi="0" ci="11" mb="0" cb="2"/><line nr="529" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="9" mb="0" cb="2"/><line nr="536" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="1" cb="1"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="1" cb="1"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="0"/><line nr="556" mi="0" ci="3" mb="1" cb="1"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="3" ci="0" mb="2" cb="0"/><line nr="559" mi="6" ci="0" mb="0" cb="0"/><line nr="561" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="0" ci="5" mb="0" cb="0"/><line nr="572" mi="0" ci="5" mb="2" cb="2"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="0" cb="0"/><line nr="575" mi="0" ci="4" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="581" mi="0" ci="9" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="9" mb="0" cb="2"/><line nr="591" mi="0" ci="11" mb="0" cb="2"/><line nr="592" mi="0" ci="4" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="5" mb="0" cb="0"/><line nr="599" mi="0" ci="2" mb="0" cb="0"/><line nr="603" mi="0" ci="8" mb="0" cb="0"/><line nr="607" mi="0" ci="7" mb="0" cb="0"/><line nr="611" mi="0" ci="10" mb="0" cb="0"/><line nr="612" mi="0" ci="2" mb="0" cb="0"/><line nr="616" mi="0" ci="8" mb="1" cb="3"/><line nr="617" mi="0" ci="13" mb="0" cb="0"/><line nr="619" mi="0" ci="6" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="622" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="9" mb="0" cb="2"/><line nr="629" mi="0" ci="11" mb="0" cb="2"/><line nr="630" mi="0" ci="4" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="0" ci="2" mb="0" cb="0"/><line nr="641" mi="0" ci="9" mb="0" cb="2"/><line nr="642" mi="0" ci="11" mb="0" cb="2"/><line nr="643" mi="0" ci="4" mb="0" cb="0"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="649" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="654" mi="0" ci="5" mb="0" cb="0"/><line nr="655" mi="0" ci="2" mb="0" cb="0"/><line nr="659" mi="1" ci="8" mb="1" cb="1"/><line nr="660" mi="0" ci="16" mb="0" cb="2"/><line nr="661" mi="0" ci="1" mb="0" cb="0"/><line nr="662" mi="1" ci="4" mb="1" cb="1"/><line nr="663" mi="0" ci="5" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="668" mi="0" ci="2" mb="0" cb="0"/><line nr="696" mi="1" ci="8" mb="1" cb="1"/><line nr="697" mi="0" ci="13" mb="0" cb="2"/><line nr="698" mi="0" ci="11" mb="0" cb="0"/><line nr="700" mi="0" ci="3" mb="0" cb="0"/><line nr="701" mi="0" ci="6" mb="1" cb="3"/><line nr="702" mi="0" ci="5" mb="0" cb="0"/><line nr="703" mi="0" ci="4" mb="0" cb="0"/><line nr="705" mi="0" ci="12" mb="0" cb="2"/><line nr="706" mi="0" ci="3" mb="1" cb="1"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="708" mi="0" ci="4" mb="0" cb="0"/><line nr="709" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="2" mb="0" cb="0"/><line nr="740" mi="1" ci="8" mb="1" cb="1"/><line nr="741" mi="0" ci="17" mb="0" cb="2"/><line nr="742" mi="0" ci="10" mb="0" cb="0"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="6" mb="1" cb="3"/><line nr="746" mi="4" ci="0" mb="0" cb="0"/><line nr="748" mi="0" ci="17" mb="0" cb="2"/><line nr="749" mi="0" ci="4" mb="0" cb="0"/><line nr="751" mi="0" ci="2" mb="0" cb="0"/><line nr="755" mi="0" ci="12" mb="0" cb="2"/><line nr="756" mi="0" ci="6" mb="0" cb="0"/><line nr="759" mi="0" ci="4" mb="0" cb="2"/><line nr="760" mi="1" ci="9" mb="1" cb="1"/><line nr="761" mi="0" ci="12" mb="0" cb="2"/><line nr="762" mi="0" ci="9" mb="0" cb="2"/><line nr="766" mi="0" ci="12" mb="0" cb="4"/><line nr="767" mi="0" ci="8" mb="0" cb="0"/><line nr="769" mi="0" ci="12" mb="0" cb="2"/><line nr="770" mi="1" ci="8" mb="1" cb="1"/><line nr="773" mi="0" ci="4" mb="0" cb="2"/><line nr="774" mi="1" ci="6" mb="1" cb="1"/><line nr="775" mi="0" ci="3" mb="0" cb="0"/><line nr="776" mi="0" ci="12" mb="0" cb="2"/><line nr="777" mi="1" ci="8" mb="1" cb="1"/><line nr="781" mi="0" ci="13" mb="0" cb="2"/><line nr="782" mi="0" ci="16" mb="0" cb="2"/><line nr="783" mi="1" ci="8" mb="1" cb="1"/><line nr="784" mi="0" ci="3" mb="0" cb="0"/><line nr="785" mi="0" ci="12" mb="0" cb="0"/><line nr="788" mi="0" ci="12" mb="0" cb="2"/><line nr="789" mi="0" ci="8" mb="0" cb="4"/><line nr="790" mi="0" ci="13" mb="0" cb="0"/><line nr="791" mi="0" ci="4" mb="0" cb="0"/><line nr="792" mi="0" ci="10" mb="0" cb="0"/><line nr="793" mi="0" ci="17" mb="0" cb="0"/><line nr="797" mi="0" ci="12" mb="0" cb="2"/><line nr="798" mi="0" ci="4" mb="0" cb="2"/><line nr="799" mi="0" ci="15" mb="0" cb="0"/><line nr="800" mi="0" ci="2" mb="0" cb="0"/><line nr="801" mi="0" ci="13" mb="0" cb="0"/><line nr="802" mi="0" ci="5" mb="0" cb="2"/><line nr="803" mi="0" ci="7" mb="0" cb="0"/><line nr="804" mi="0" ci="5" mb="0" cb="0"/><line nr="805" mi="0" ci="19" mb="0" cb="0"/><line nr="807" mi="0" ci="4" mb="0" cb="2"/><line nr="808" mi="0" ci="12" mb="0" cb="2"/><line nr="809" mi="0" ci="13" mb="0" cb="0"/><line nr="811" mi="0" ci="4" mb="0" cb="2"/><line nr="812" mi="0" ci="13" mb="0" cb="2"/><line nr="813" mi="0" ci="13" mb="0" cb="0"/><line nr="817" mi="0" ci="12" mb="0" cb="2"/><line nr="818" mi="0" ci="7" mb="0" cb="0"/><line nr="819" mi="0" ci="20" mb="0" cb="0"/><line nr="820" mi="0" ci="4" mb="0" cb="0"/><line nr="823" mi="0" ci="13" mb="0" cb="4"/><line nr="824" mi="0" ci="12" mb="0" cb="2"/><line nr="825" mi="2" ci="8" mb="1" cb="3"/><line nr="826" mi="0" ci="13" mb="0" cb="0"/><line nr="829" mi="0" ci="5" mb="0" cb="0"/><line nr="830" mi="0" ci="10" mb="0" cb="2"/><line nr="831" mi="2" ci="8" mb="1" cb="3"/><line nr="832" mi="0" ci="3" mb="0" cb="0"/><line nr="834" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="2413"/><counter type="BRANCH" missed="37" covered="219"/><counter type="LINE" missed="7" covered="419"/><counter type="COMPLEXITY" missed="37" covered="151"/><counter type="METHOD" missed="1" covered="59"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="779" covered="10408"/><counter type="BRANCH" missed="160" covered="963"/><counter type="LINE" missed="125" covered="1966"/><counter type="COMPLEXITY" missed="179" covered="839"/><counter type="METHOD" missed="35" covered="407"/><counter type="CLASS" missed="0" covered="34"/></package><counter type="INSTRUCTION" missed="779" covered="10408"/><counter type="BRANCH" missed="160" covered="963"/><counter type="LINE" missed="125" covered="1966"/><counter type="COMPLEXITY" missed="179" covered="839"/><counter type="METHOD" missed="35" covered="407"/><counter type="CLASS" missed="0" covered="34"/></report>